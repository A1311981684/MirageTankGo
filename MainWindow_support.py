#! /usr/bin/env python
#
# Support module generated by PAGE version 4.10
# In conjunction with Tcl version 8.6
#    Jan 22, 2018 12:13:14 AM


import sys


try:
    from Tkinter import *
except ImportError:
    from tkinter import *
    import tkinter.filedialog as filedialog
    import tkinter.messagebox as messagebox

try:
    import CMTCore as MTCore
except ImportError:
    import MTCore

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

def set_Tk_var():
    global defaultWhite
    defaultWhite = StringVar()
    global defaultBlack
    defaultBlack = StringVar()
    global defaultOutput
    defaultOutput = StringVar()
    global che50
    che50 = StringVar()


def hideFileBrowser():
    global w
    print('MainWindow_support.hideFileBrowser')
    filename = filedialog.askopenfilename(filetypes=[('任何图片', '.*')])
    w.hideFile.delete(0, END)
    w.hideFile.insert(0, filename)
    sys.stdout.flush()

def hostFileBrowser():
    global w
    print('MainWindow_support.hostFileBrowser')
    filename = filedialog.askopenfilename(filetypes=[('任何图片', '.*')])
    w.hostFile.delete(0, END)
    w.hostFile.insert(0, filename)
    sys.stdout.flush()

def outputFileBrowser():
    global w
    print('MainWindow_support.outputFileBrowser')
    filename = filedialog.asksaveasfilename(filetypes=[('png图片', '.png')])
    w.outputFile.delete(0, END)
    w.outputFile.insert(0, filename)
    sys.stdout.flush()


def startBuild():
    global w
    print('MainWindow_support.startBuild')

    outputFile = w.outputFile.get()
    tryBuild().save(outputFile)

    messagebox.showinfo(title='提示', message='转换成功!')
    sys.stdout.flush()


def tryBuild():
    global w
    print('MainWindow_support.tryBuild')
    from PIL import ImageTk

    hostFile = w.hostFile.get()
    hideFile = w.hideFile.get()
    enableChess = bool(w.che50.get())

    if w.TNotebook1.tab(w.TNotebook1.select(), "text") == "灰度车":
        blackLight = float(w.blackLight.get())
        output = MTCore.grayCar(hostFile, hideFile, blackLight, enableChess)
    else:
        blackLight = float(w.blackLight_c.get())
        whiteColor = float(w.whiteColor.get())
        blackColor = float(w.blackColor.get())
        output = MTCore.colorfulCar(hostFile, hideFile, blackLight, whiteColor, blackColor)

    w._img = ImageTk.PhotoImage(output)

    # 棋盘格化后的图像显示太耗时, 没想到好办法之前先不显示了
    if not enableChess:
        w.showWhite.configure(image=w._img)
        w.showBlack.configure(image=w._img)

    sys.stdout.flush()
    return output


def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import MainWindow
    MainWindow.vp_start_gui()


